# .github/workflows/build.yml
name: Build QuimoPOS Multi-Platform

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            artifact_name: QuimoPOS_Windows
            binary_name: QuimoPOS.exe
          - os: ubuntu-latest  
            artifact_name: QuimoPOS_Linux
            binary_name: QuimoPOS
          - os: macos-latest
            artifact_name: QuimoPOS_macOS
            binary_name: QuimoPOS

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install pg8000
        pip install psycopg2-binary
        pip install Pillow
        pip install PyQt5
        pip install -r requirements.txt

    - name: Build application
      run: |
        python build_github.py

    - name: Create distribution package
      run: |
        python create_package.py "${{ matrix.artifact_name }}" "${{ matrix.binary_name }}"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: ${{ matrix.artifact_name }}/
        retention-days: 30

    - name: Create release assets
      if: github.event_name == 'release'
      run: |
        cd ${{ matrix.artifact_name }}
        zip -r ../${{ matrix.artifact_name }}.zip .
        cd ..
      shell: bash

    - name: Upload release asset
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ matrix.artifact_name }}.zip
        asset_name: ${{ matrix.artifact_name }}.zip
        asset_content_type: application/zip